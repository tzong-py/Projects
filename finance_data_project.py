# -*- coding: utf-8 -*-
"""Finance Data Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g2OsVJsxOn02nQFs_zilaBKh6ldK0KT9

# Finance Data Project 

In this data project we will focus on exploratory data analysis of stock prices for the following banks:
* Bank of America
* CitiGroup
* Goldman Sachs
* JPMorgan Chase
* Morgan Stanley
* Wells Fargo

I'll focus on bank stocks and see how they progressed throughout the [financial crisis](https://en.wikipedia.org/wiki/Financial_crisis_of_2007%E2%80%9308) all the way to early 2016.
"""

# Commented out IPython magic to ensure Python compatibility.
from pandas_datareader import data, wb
import pandas as pd
import numpy as np
import datetime
import matplotlib.pyplot as plt
import seaborn as sns
sns.set_style('whitegrid')
# %matplotlib inline

#set data duration: 1/1/2006 t0 1/1/2016
start = datetime.datetime(2006, 1, 1)
end = datetime.datetime(2016, 1, 1)

#Get data through Yahoo Finance
# Bank of America
BAC = data.DataReader("BAC", 'yahoo', start, end)

# CitiGroup
C = data.DataReader("C", 'yahoo', start, end)

# Goldman Sachs
GS = data.DataReader("GS", 'yahoo', start, end)

# JPMorgan Chase
JPM = data.DataReader("JPM", 'yahoo', start, end)

# Morgan Stanley
MS = data.DataReader("MS", 'yahoo', start, end)

# Wells Fargo
WFC = data.DataReader("WFC", 'yahoo', start, end)

#check data
C.head(3)

#Create tickers for later used in DataFrame
tickers = ['BAC', 'C', 'GS', 'JPM', 'MS', 'WFC']

#Create new DataFrame by concat all bannks data
bank_stocks = pd.concat([BAC, C, GS, JPM, MS, WFC],axis=1,keys=tickers)
bank_stocks.columns.names = ['Bank Ticker','Stock Info']

#Check data
bank_stocks

"""Now DataFrame bank_stocks is created and ready for further analysis"""

# First let's see each bank's highest closing price in this time period
bank_stocks.xs(key='Close',axis=1,level='Stock Info').max()

"""Finding: CitiGroup had the highest Close Price compared with all other banks"""

#Let's create a return Data Frame of these banks stock price

returns = pd.DataFrame()

for tick in tickers:
    returns[tick+' Return'] = bank_stocks[tick]['Close'].pct_change()
returns.head()

#Create a pairplot to compare Returns performance for these banks

import seaborn as sns
sns.pairplot(returns[1:])

"""**Finding:** 

Among all these banks Morgan Stanley is the one stood out with its graphs. Their returns is not as good as its competitors and it was probably due to the Financial Crisis of 2007-2010, where Morgan Stanley is said to have lost over 80% of its market value betweeon 2007 and 2008.

** Using this returns DataFrame, figure out on what dates each bank stock had the best and worst single day returns. You should notice that 4 of the banks share the same day for the worst drop, did anything significant happen that day?**
"""

# Let's check when is the worst drop for the banks in Returns

returns.idxmin()

"""**Finding:**

4 out of these 6 banks have the worst day on 2009/01/20*. 


*Note: I did some researches on what happened on this day and it turns out 2009/01/20 was President Obama Inaugurated Day. Probably just co-incident.
"""

# Let's check when is the biggest gain for the banks in Returns
returns.idxmax()

"""**Finding:**

2 banks (Citi and Golman Sachs) are having the same day 2008-11-24 as biggest gain day.

** Take a look at the standard deviation of the returns, which stock would you classify as the riskiest over the entire time period? Which would you classify as the riskiest for the year 2015?**
"""

#Check which bank is the riskiest over the entire time period by using Standard Deviation
returns.std()

"""Finding: Citi is the riskiest"""

#Further data to analyze on Citi
sns.distplot(returns['C Return'],color='red',bins=100)

# Compared with Golman Sachs, which is the lowest risk
sns.distplot(returns['GS Return'],color='green',bins=100)

"""** Create a line plot showing Close price for each bank for the entire index of time. (Hint: Try using a for loop, or use [.xs](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.xs.html) to get a cross section of the data.)**"""

#Create a line plot to display Close Price for each bank and see how they performed
for tick in tickers:
    bank_stocks[tick]['Close'].plot(figsize=(12,4),label=tick)
plt.legend()

"""**Finding:**

1. Citi experienced the biggest crash from 2007 to 2009, which mirror with our analysis regarding its riskiest and worse performing within those timing
2. Goldman Sachs also experience big drop in 2008, but was able to climb back to previous level in 2009. The rebound would be caused by Fed provided overnight loans to Goldman Sachs ($538 billion total)
"""

#Comparing Citi Close Price with 30 days avg within the time frame
plt.figure(figsize=(12,6))
C['Close'].loc['2007-01-01':'2009-01-01'].rolling(window=30).mean().plot(label='30 Day Avg')
C['Close'].loc['2007-01-01':'2009-01-01'].plot(label='C CLOSE')
plt.legend()

"""Finding: the stock performed worst than 30 Day average as expected"""

#Checking on correlations between the stocks Close Price
sns.heatmap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)

#Another view of correlations by using clustermap
sns.clustermap(bank_stocks.xs(key='Close',axis=1,level='Stock Info').corr(),annot=True)

"""**Findings:**

1. The data put WCF, JPM, and GS as 1 group, while MS, BAC, and C as another
2. Among these banks, GS has the average correlations with other banks (around 0.5 - 0.6)
3. Seeing very low correlation between C and JPM, but highest is C with BAC
4. Other strong correlations are MS & BAC, MS & C, JPM & WFC
"""